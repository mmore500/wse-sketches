const dsd = @import_module("cerebraslib/dsd.csl");
const opscalar = @import_module("cerebraslib/opscalar.csl");


/// Fill dsd with 0, 1, 2, 3, ...
fn iota16(dest_dsd: mem1d_dsd) void {
    const head_dsd = @set_dsd_length(dest_dsd, 1);
    @mov16(head_dsd, 0);

    const body_dsd = @increment_dsd_offset(dest_dsd, 1, u16);
    @map(opscalar.incr16, dest_dsd, body_dsd);
}


/// Fill dsd with 0, 1, 2, 3, ...
fn iota32(dest_dsd: mem1d_dsd) void {
    const head_dsd = @set_dsd_length(dest_dsd, 1);
    @mov32(head_dsd, 0);

    const body_dsd = @increment_dsd_offset(dest_dsd, 1, u32);
    @map(opscalar.incr32, dest_dsd, body_dsd);
}


/// Fill dsd with 0 % mod, 1 % mod, 2 % mod, 3 % mod, ...
fn iotamod32(dest_dsd: mem1d_dsd, mod: u32) void {
    const head_dsd = @set_dsd_length(dest_dsd, 1);
    @mov32(head_dsd, 0);

    const body_dsd = @increment_dsd_offset(dest_dsd, 1, u32);
    const mod_dsd = dsd.get_dsd_repeat32(mod);
    @map(opscalar.incrmod32, dest_dsd, mod_dsd, body_dsd);
}
