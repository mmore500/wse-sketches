const dstream_tilted = @import_module("cerebraslib/dstream_tilted.csl");

const expected8 = [254]u32{ 0, 1, 5, 2, 4, 6, 7, 3, 0, 1, 5, 7, 0, 6, 5, 4, 0, 1, 0, 2, 0, 6, 0, 3, 0, 1, 0, 7, 0, 6, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 7, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 7, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1 };

fn test_dstream_tilted8() void {
    for (@range(u32, 254)) |T| {
        const k = expected8[T];
        @assert(dstream_tilted.pick_deposition_site(8, T) == k);
    }
}

const expected16 = [1024]u32{ 0, 1, 9, 2, 6, 10, 13, 3, 5, 7, 8, 11, 12, 14, 15, 4, 0, 1, 9, 8, 6, 10, 13, 12, 0, 7, 9, 15, 6, 14, 13, 5, 0, 1, 9, 2, 0, 10, 9, 3, 0, 7, 9, 11, 0, 14, 9, 13, 0, 1, 9, 8, 0, 10, 9, 12, 0, 7, 9, 15, 0, 14, 9, 6, 0, 1, 9, 2, 0, 10, 9, 3, 0, 1, 9, 11, 0, 10, 9, 4, 0, 1, 9, 8, 0, 10, 9, 12, 0, 1, 9, 15, 0, 10, 9, 14, 0, 1, 9, 2, 0, 10, 9, 3, 0, 1, 9, 11, 0, 10, 9, 13, 0, 1, 9, 8, 0, 10, 9, 12, 0, 1, 9, 15, 0, 10, 9, 7, 0, 1, 9, 2, 0, 10, 9, 3, 0, 1, 9, 11, 0, 10, 9, 4, 0, 1, 9, 2, 0, 10, 9, 12, 0, 1, 9, 11, 0, 10, 9, 5, 0, 1, 9, 2, 0, 10, 9, 3, 0, 1, 9, 11, 0, 10, 9, 13, 0, 1, 9, 2, 0, 10, 9, 12, 0, 1, 9, 11, 0, 10, 9, 15, 0, 1, 9, 2, 0, 10, 9, 3, 0, 1, 9, 11, 0, 10, 9, 4, 0, 1, 9, 2, 0, 10, 9, 12, 0, 1, 9, 11, 0, 10, 9, 14, 0, 1, 9, 2, 0, 10, 9, 3, 0, 1, 9, 11, 0, 10, 9, 13, 0, 1, 9, 2, 0, 10, 9, 12, 0, 1, 9, 11, 0, 10, 9, 8, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 4, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 5, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 13, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 6, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 4, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 14, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 13, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 7, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 4, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 5, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 13, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 15, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 4, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 14, 0, 1, 0, 2, 0, 10, 0, 3, 0, 1, 0, 11, 0, 10, 0, 13, 0, 1, 0, 2, 0, 10, 0, 12, 0, 1, 0, 11, 0, 10, 0, 9, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 14, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 15, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 14, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 14, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 15, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 14, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 11, 0, 1, 0, 13, 0, 1, 0, 2, 0, 1, 0, 12, 0, 1, 0, 11, 0, 1, 0, 10 };

fn test_dstream_tilted16() void {
    for (@range(u32, 1024)) |T| {
        const k = expected16[T];
        @assert(dstream_tilted.pick_deposition_site(16, T) == k);
    }
}

const expected32 = [1024]u32{ 0, 1, 17, 2, 10, 18, 25, 3, 7, 11, 14, 19, 22, 26, 29, 4, 6, 8, 9, 12, 13, 15, 16, 20, 21, 23, 24, 27, 28, 30, 31, 5, 0, 1, 17, 9, 10, 18, 25, 13, 7, 11, 14, 16, 22, 26, 29, 21, 0, 8, 17, 24, 10, 15, 25, 28, 7, 23, 14, 31, 22, 30, 29, 6, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 14, 0, 8, 17, 12, 10, 15, 25, 20, 0, 23, 17, 27, 10, 30, 25, 22, 0, 1, 17, 9, 10, 18, 25, 13, 0, 11, 17, 16, 10, 26, 25, 29, 0, 8, 17, 24, 10, 15, 25, 28, 0, 23, 17, 31, 10, 30, 25, 7, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 4, 0, 1, 17, 12, 10, 18, 25, 20, 0, 11, 17, 27, 10, 26, 25, 15, 0, 1, 17, 9, 10, 18, 25, 13, 0, 11, 17, 16, 10, 26, 25, 21, 0, 1, 17, 24, 10, 18, 25, 28, 0, 11, 17, 31, 10, 26, 25, 23, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 14, 0, 1, 17, 12, 10, 18, 25, 20, 0, 11, 17, 27, 10, 26, 25, 30, 0, 1, 17, 9, 10, 18, 25, 13, 0, 11, 17, 16, 10, 26, 25, 29, 0, 1, 17, 24, 10, 18, 25, 28, 0, 11, 17, 31, 10, 26, 25, 8, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 4, 0, 1, 17, 12, 10, 18, 25, 20, 0, 11, 17, 27, 10, 26, 25, 5, 0, 1, 17, 2, 10, 18, 25, 13, 0, 11, 17, 19, 10, 26, 25, 21, 0, 1, 17, 12, 10, 18, 25, 28, 0, 11, 17, 27, 10, 26, 25, 16, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 14, 0, 1, 17, 12, 10, 18, 25, 20, 0, 11, 17, 27, 10, 26, 25, 22, 0, 1, 17, 2, 10, 18, 25, 13, 0, 11, 17, 19, 10, 26, 25, 29, 0, 1, 17, 12, 10, 18, 25, 28, 0, 11, 17, 27, 10, 26, 25, 24, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 4, 0, 1, 17, 12, 10, 18, 25, 20, 0, 11, 17, 27, 10, 26, 25, 15, 0, 1, 17, 2, 10, 18, 25, 13, 0, 11, 17, 19, 10, 26, 25, 21, 0, 1, 17, 12, 10, 18, 25, 28, 0, 11, 17, 27, 10, 26, 25, 31, 0, 1, 17, 2, 10, 18, 25, 3, 0, 11, 17, 19, 10, 26, 25, 14, 0, 1, 17, 12, 10, 18, 25, 20, 0, 11, 17, 27, 10, 26, 25, 30, 0, 1, 17, 2, 10, 18, 25, 13, 0, 11, 17, 19, 10, 26, 25, 29, 0, 1, 17, 12, 10, 18, 25, 28, 0, 11, 17, 27, 10, 26, 25, 9, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 4, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 5, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 21, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 6, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 14, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 22, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 29, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 7, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 4, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 15, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 21, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 23, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 14, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 30, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 29, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 25, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 4, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 5, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 21, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 16, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 14, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 22, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 29, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 24, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 4, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 15, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 21, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 31, 0, 1, 17, 2, 0, 18, 17, 3, 0, 11, 17, 19, 0, 26, 17, 14, 0, 1, 17, 12, 0, 18, 17, 20, 0, 11, 17, 27, 0, 26, 17, 30, 0, 1, 17, 2, 0, 18, 17, 13, 0, 11, 17, 19, 0, 26, 17, 29, 0, 1, 17, 12, 0, 18, 17, 28, 0, 11, 17, 27, 0, 26, 17, 10 };

fn test_dstream_tilted32() void {
    for (@range(u32, 1024)) |T| {
        const k = expected32[T];
        @assert(dstream_tilted.pick_deposition_site(32, T) == k);
    }
}

const expected64 = [1024]u32{ 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 4, 8, 12, 15, 20, 23, 27, 30, 36, 39, 43, 46, 51, 54, 58, 61, 5, 7, 9, 10, 13, 14, 16, 17, 21, 22, 24, 25, 28, 29, 31, 32, 37, 38, 40, 41, 44, 45, 47, 48, 52, 53, 55, 56, 59, 60, 62, 63, 6, 0, 1, 33, 10, 18, 34, 49, 14, 11, 19, 26, 17, 42, 50, 57, 22, 8, 12, 15, 25, 23, 27, 30, 29, 39, 43, 46, 32, 54, 58, 61, 38, 0, 9, 33, 41, 18, 16, 49, 45, 11, 24, 26, 48, 42, 31, 57, 53, 8, 40, 15, 56, 23, 47, 30, 60, 39, 55, 46, 63, 54, 62, 61, 7, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 15, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 23, 0, 9, 33, 13, 18, 16, 49, 21, 11, 24, 26, 28, 42, 31, 57, 30, 0, 40, 33, 44, 18, 47, 49, 52, 11, 55, 26, 59, 42, 62, 57, 39, 0, 1, 33, 10, 18, 34, 49, 14, 11, 19, 26, 17, 42, 50, 57, 46, 0, 12, 33, 25, 18, 27, 49, 29, 11, 43, 26, 32, 42, 58, 57, 54, 0, 9, 33, 41, 18, 16, 49, 45, 11, 24, 26, 48, 42, 31, 57, 61, 0, 40, 33, 56, 18, 47, 49, 60, 11, 55, 26, 63, 42, 62, 57, 8, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 4, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 16, 0, 1, 33, 13, 18, 34, 49, 21, 11, 19, 26, 28, 42, 50, 57, 37, 0, 12, 33, 44, 18, 27, 49, 52, 11, 43, 26, 59, 42, 58, 57, 24, 0, 1, 33, 10, 18, 34, 49, 14, 11, 19, 26, 17, 42, 50, 57, 22, 0, 12, 33, 25, 18, 27, 49, 29, 11, 43, 26, 32, 42, 58, 57, 31, 0, 1, 33, 41, 18, 34, 49, 45, 11, 19, 26, 48, 42, 50, 57, 53, 0, 12, 33, 56, 18, 27, 49, 60, 11, 43, 26, 63, 42, 58, 57, 40, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 15, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 47, 0, 1, 33, 13, 18, 34, 49, 21, 11, 19, 26, 28, 42, 50, 57, 30, 0, 12, 33, 44, 18, 27, 49, 52, 11, 43, 26, 59, 42, 58, 57, 55, 0, 1, 33, 10, 18, 34, 49, 14, 11, 19, 26, 17, 42, 50, 57, 46, 0, 12, 33, 25, 18, 27, 49, 29, 11, 43, 26, 32, 42, 58, 57, 62, 0, 1, 33, 41, 18, 34, 49, 45, 11, 19, 26, 48, 42, 50, 57, 61, 0, 12, 33, 56, 18, 27, 49, 60, 11, 43, 26, 63, 42, 58, 57, 9, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 4, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 5, 0, 1, 33, 13, 18, 34, 49, 21, 11, 19, 26, 28, 42, 50, 57, 37, 0, 12, 33, 44, 18, 27, 49, 52, 11, 43, 26, 59, 42, 58, 57, 17, 0, 1, 33, 2, 18, 34, 49, 14, 11, 19, 26, 35, 42, 50, 57, 22, 0, 12, 33, 20, 18, 27, 49, 29, 11, 43, 26, 51, 42, 58, 57, 38, 0, 1, 33, 13, 18, 34, 49, 45, 11, 19, 26, 28, 42, 50, 57, 53, 0, 12, 33, 44, 18, 27, 49, 60, 11, 43, 26, 59, 42, 58, 57, 25, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 15, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 23, 0, 1, 33, 13, 18, 34, 49, 21, 11, 19, 26, 28, 42, 50, 57, 30, 0, 12, 33, 44, 18, 27, 49, 52, 11, 43, 26, 59, 42, 58, 57, 32, 0, 1, 33, 2, 18, 34, 49, 14, 11, 19, 26, 35, 42, 50, 57, 46, 0, 12, 33, 20, 18, 27, 49, 29, 11, 43, 26, 51, 42, 58, 57, 54, 0, 1, 33, 13, 18, 34, 49, 45, 11, 19, 26, 28, 42, 50, 57, 61, 0, 12, 33, 44, 18, 27, 49, 60, 11, 43, 26, 59, 42, 58, 57, 41, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 4, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 16, 0, 1, 33, 13, 18, 34, 49, 21, 11, 19, 26, 28, 42, 50, 57, 37, 0, 12, 33, 44, 18, 27, 49, 52, 11, 43, 26, 59, 42, 58, 57, 48, 0, 1, 33, 2, 18, 34, 49, 14, 11, 19, 26, 35, 42, 50, 57, 22, 0, 12, 33, 20, 18, 27, 49, 29, 11, 43, 26, 51, 42, 58, 57, 31, 0, 1, 33, 13, 18, 34, 49, 45, 11, 19, 26, 28, 42, 50, 57, 53, 0, 12, 33, 44, 18, 27, 49, 60, 11, 43, 26, 59, 42, 58, 57, 56, 0, 1, 33, 2, 18, 34, 49, 3, 11, 19, 26, 35, 42, 50, 57, 15, 0, 12, 33, 20, 18, 27, 49, 36, 11, 43, 26, 51, 42, 58, 57, 47, 0, 1, 33, 13, 18, 34, 49, 21, 11, 19, 26, 28, 42, 50, 57, 30, 0, 12, 33, 44, 18, 27, 49, 52, 11, 43, 26, 59, 42, 58, 57, 63, 0, 1, 33, 2, 18, 34, 49, 14, 11, 19, 26, 35, 42, 50, 57, 46, 0, 12, 33, 20, 18, 27, 49, 29, 11, 43, 26, 51, 42, 58, 57, 62, 0, 1, 33, 13, 18, 34, 49, 45, 11, 19, 26, 28, 42, 50, 57, 61, 0, 12, 33, 44, 18, 27, 49, 60, 11, 43, 26, 59, 42, 58, 57, 10 };

fn test_dstream_tilted64() void {
    for (@range(u32, 1024)) |T| {
        const k = expected64[T];
        @assert(dstream_tilted.pick_deposition_site(64, T) == k);
    }
}

const expected256 = [1024]u32{ 0, 1, 129, 2, 66, 130, 193, 3, 35, 67, 98, 131, 162, 194, 225, 4, 20, 36, 51, 68, 83, 99, 114, 132, 147, 163, 178, 195, 210, 226, 241, 5, 13, 21, 28, 37, 44, 52, 59, 69, 76, 84, 91, 100, 107, 115, 122, 133, 140, 148, 155, 164, 171, 179, 186, 196, 203, 211, 218, 227, 234, 242, 249, 6, 10, 14, 17, 22, 25, 29, 32, 38, 41, 45, 48, 53, 56, 60, 63, 70, 73, 77, 80, 85, 88, 92, 95, 101, 104, 108, 111, 116, 119, 123, 126, 134, 137, 141, 144, 149, 152, 156, 159, 165, 168, 172, 175, 180, 183, 187, 190, 197, 200, 204, 207, 212, 215, 219, 222, 228, 231, 235, 238, 243, 246, 250, 253, 7, 9, 11, 12, 15, 16, 18, 19, 23, 24, 26, 27, 30, 31, 33, 34, 39, 40, 42, 43, 46, 47, 49, 50, 54, 55, 57, 58, 61, 62, 64, 65, 71, 72, 74, 75, 78, 79, 81, 82, 86, 87, 89, 90, 93, 94, 96, 97, 102, 103, 105, 106, 109, 110, 112, 113, 117, 118, 120, 121, 124, 125, 127, 128, 135, 136, 138, 139, 142, 143, 145, 146, 150, 151, 153, 154, 157, 158, 160, 161, 166, 167, 169, 170, 173, 174, 176, 177, 181, 182, 184, 185, 188, 189, 191, 192, 198, 199, 201, 202, 205, 206, 208, 209, 213, 214, 216, 217, 220, 221, 223, 224, 229, 230, 232, 233, 236, 237, 239, 240, 244, 245, 247, 248, 251, 252, 254, 255, 8, 0, 1, 129, 12, 66, 130, 193, 16, 35, 67, 98, 19, 162, 194, 225, 24, 20, 36, 51, 27, 83, 99, 114, 31, 147, 163, 178, 34, 210, 226, 241, 40, 13, 21, 28, 43, 44, 52, 59, 47, 76, 84, 91, 50, 107, 115, 122, 55, 140, 148, 155, 58, 171, 179, 186, 62, 203, 211, 218, 65, 234, 242, 249, 72, 10, 14, 17, 75, 25, 29, 32, 79, 41, 45, 48, 82, 56, 60, 63, 87, 73, 77, 80, 90, 88, 92, 95, 94, 104, 108, 111, 97, 119, 123, 126, 103, 137, 141, 144, 106, 152, 156, 159, 110, 168, 172, 175, 113, 183, 187, 190, 118, 200, 204, 207, 121, 215, 219, 222, 125, 231, 235, 238, 128, 246, 250, 253, 136, 0, 11, 129, 139, 66, 18, 193, 143, 35, 26, 98, 146, 162, 33, 225, 151, 20, 42, 51, 154, 83, 49, 114, 158, 147, 57, 178, 161, 210, 64, 241, 167, 13, 74, 28, 170, 44, 81, 59, 174, 76, 89, 91, 177, 107, 96, 122, 182, 140, 105, 155, 185, 171, 112, 186, 189, 203, 120, 218, 192, 234, 127, 249, 199, 10, 138, 17, 202, 25, 145, 32, 206, 41, 153, 48, 209, 56, 160, 63, 214, 73, 169, 80, 217, 88, 176, 95, 221, 104, 184, 111, 224, 119, 191, 126, 230, 137, 201, 144, 233, 152, 208, 159, 237, 168, 216, 175, 240, 183, 223, 190, 245, 200, 232, 207, 248, 215, 239, 222, 252, 231, 247, 238, 255, 246, 254, 253, 9, 0, 1, 129, 2, 66, 130, 193, 3, 35, 67, 98, 131, 162, 194, 225, 17, 20, 36, 51, 68, 83, 99, 114, 132, 147, 163, 178, 195, 210, 226, 241, 25, 13, 21, 28, 37, 44, 52, 59, 69, 76, 84, 91, 100, 107, 115, 122, 32, 140, 148, 155, 164, 171, 179, 186, 196, 203, 211, 218, 227, 234, 242, 249, 41, 0, 14, 129, 22, 66, 29, 193, 38, 35, 45, 98, 53, 162, 60, 225, 48, 20, 77, 51, 85, 83, 92, 114, 101, 147, 108, 178, 116, 210, 123, 241, 56, 13, 141, 28, 149, 44, 156, 59, 165, 76, 172, 91, 180, 107, 187, 122, 63, 140, 204, 155, 212, 171, 219, 186, 228, 203, 235, 218, 243, 234, 250, 249, 73, 0, 11, 129, 15, 66, 18, 193, 23, 35, 26, 98, 30, 162, 33, 225, 80, 20, 42, 51, 46, 83, 49, 114, 54, 147, 57, 178, 61, 210, 64, 241, 88, 13, 74, 28, 78, 44, 81, 59, 86, 76, 89, 91, 93, 107, 96, 122, 95, 140, 105, 155, 109, 171, 112, 186, 117, 203, 120, 218, 124, 234, 127, 249, 104, 0, 138, 129, 142, 66, 145, 193, 150, 35, 153, 98, 157, 162, 160, 225, 111, 20, 169, 51, 173, 83, 176, 114, 181, 147, 184, 178, 188, 210, 191, 241, 119, 13, 201, 28, 205, 44, 208, 59, 213, 76, 216, 91, 220, 107, 223, 122, 126, 140, 232, 155, 236, 171, 239, 186, 244, 203, 247, 218, 251, 234, 254, 249, 137, 0, 1, 129, 12, 66, 130, 193, 16, 35, 67, 98, 19, 162, 194, 225, 144, 20, 36, 51, 27, 83, 99, 114, 31, 147, 163, 178, 34, 210, 226, 241, 152, 13, 21, 28, 43, 44, 52, 59, 47, 76, 84, 91, 50, 107, 115, 122, 159, 140, 148, 155, 58, 171, 179, 186, 62, 203, 211, 218, 65, 234, 242, 249, 168, 0, 14, 129, 75, 66, 29, 193, 79, 35, 45, 98, 82, 162, 60, 225, 175, 20, 77, 51, 90, 83, 92, 114, 94, 147, 108, 178, 97, 210, 123, 241, 183, 13, 141, 28, 106, 44, 156, 59, 110, 76, 172, 91, 113, 107, 187, 122, 190, 140, 204, 155, 121, 171, 219, 186, 125, 203, 235, 218, 128, 234, 250, 249, 200, 0, 11, 129, 139, 66, 18, 193, 143, 35, 26, 98, 146, 162, 33, 225, 207, 20, 42, 51, 154, 83, 49, 114, 158, 147, 57, 178, 161, 210, 64, 241, 215, 13, 74, 28, 170, 44, 81, 59, 174, 76, 89, 91, 177, 107, 96, 122, 222, 140, 105, 155, 185, 171, 112, 186, 189, 203, 120, 218, 192, 234, 127, 249, 231, 0, 138, 129, 202, 66, 145, 193, 206, 35, 153, 98, 209, 162, 160, 225, 238, 20, 169, 51, 217, 83, 176, 114, 221, 147, 184, 178, 224, 210, 191, 241, 246, 13, 201, 28, 233, 44, 208, 59, 237, 76, 216, 91, 240, 107, 223, 122, 253, 140, 232, 155, 248, 171, 239, 186, 252, 203, 247, 218, 255, 234, 254, 249, 10 };

fn test_dstream_tilted256() void {
    for (@range(u32, 1024)) |T| {
        const k = expected256[T];
        @assert(dstream_tilted.pick_deposition_site(256, T) == k);
    }
}

fn test_smoke() void {
    dstream_tilted.pick_deposition_site(4, 0);
    dstream_tilted.pick_deposition_site_(2, 0);
    for (@range(u32, 200)) |i| {
        dstream_tilted.pick_deposition_site(64, i);
        dstream_tilted.pick_deposition_site_(6, i);
        dstream_tilted.pick_deposition_site(256, i);
        dstream_tilted.pick_deposition_site_(8, i);
    }
}

fn do_test() void {
    test_smoke();
    test_dstream_tilted8();
    test_dstream_tilted16();
    test_dstream_tilted32();
    test_dstream_tilted64();
    test_dstream_tilted256();
}
